package ua.com.illia;

import java.util.Random;

public class Main {
    public static void main(String[] args) {

       /* System.out.println("Add MatList with Double value");
        MatList<Double> matList = new MatList<Double>();
        matList.add(2.0);
        matList.add(3.0);
        System.out.println("Result : ");
        System.out.println(matList);
        System.out.println();
        System.out.println("Add MatList with Double value using index of element");
        matList.add(1, 4.0);
        System.out.println(matList);
        System.out.println();
        System.out.println("Add MatList with Double value using collections");
        MatList<Double> matList1 = new MatList<Double>();
        matList1.addAll(matList);
        System.out.println(matList1);
        System.out.println();
        System.out.println("Clear all MatList with Double value");
        matList1.clear();
        System.out.println(matList1);
        System.out.println();
        System.out.println("Check collection: is empty ?");
        System.out.println(matList1.isEmpty());
        System.out.println();
        System.out.println("Contain element in collection checking");
        System.out.println(matList.contains(2.0));
        System.out.println(matList.contains(5.0));
        System.out.println();
        System.out.println("Set number for index");
        matList.set(1, 5.0);
        System.out.println(matList);
        System.out.println();
        System.out.println("Remove element for index");
        Double c = 0.0;
        c = matList.remove(1);
        System.out.println(matList);
        System.out.println();
        System.out.println("Return new element after remove");
        System.out.println(c);
        System.out.println();
        System.out.println("Clear matList and add new elements");
        matList.clear();
        matList.add(1.0);
        matList.add(2.0);
        matList.add(3.0);
        matList.add(4.0);
        matList.add(5.0);
        matList.add(6.0);
        System.out.println(matList);
        System.out.println();
        System.out.println("Search element in collections and return index");
        System.out.println(matList.indexOf(4.0));
        System.out.println();
        System.out.println("Add new element in collections and return it's index");
        matList.add(5.0);
        System.out.println(matList);
        System.out.println(matList.lastIndexOf(5.0));
        System.out.println();
        System.out.println("Using subList");
        System.out.println(matList.subList(1, 4));
        System.out.println();
        System.out.println("Create new matList with range integer numbers");
        MatList<Integer> matList3 = new MatList<Integer>();
        matList3.add(1, 2, 3, 4, 5);
        System.out.println(matList3);
        System.out.println();
        System.out.println("Create another matList with range integer numbers");
        MatList<Integer> matList4 = new MatList<Integer>();
        matList4.add(6, 7, 8, 9, 10);
        System.out.println(matList4);
        System.out.println();
        System.out.println("Create matList with integer numbers based on array");
        Integer[] f = new Integer[]{1, 2, 3, 4, 5};
        Integer[] h = new Integer[]{6, 7, 8, 9, 10};
        MatList<Integer> matList5 = new MatList<Integer>(f, h);
        System.out.println(matList5);
        System.out.println();
        System.out.println("Create matList with integer numbers based on matList collections");
        MatList<Integer> matList6 = new MatList<Integer>(matList4, matList5);
        System.out.println(matList6);
        System.out.println();
        System.out.println("Sort matList with integer numbers based on Asc()");
        matList6.sortAsc();
        System.out.println(matList6);
        System.out.println();
        System.out.println("Sort matList with integer numbers based on Desc()");
        matList6.sortDesc();
        System.out.println(matList6);
        System.out.println();
        System.out.println("Join matList with another collections");
        matList5.join(matList6);
        System.out.println(matList5);
        System.out.println();
        System.out.println("Sort matList with integer numbers based on Desc()");
        matList5.sortDesc();
        System.out.println(matList5);
        System.out.println();
        System.out.println("Create new matList with integer numbers and sort Desc()");
        MatList<Integer> matList8 = new MatList<Integer>(matList3);
        System.out.println(matList8);
        matList8.sortDesc();
        System.out.println(matList8);
        System.out.println();
        System.out.println("Sort Asc(1,3) matList with integer numbers in range ");
        matList8.sortAsc(1, 3);
        System.out.println(matList8);
        System.out.println();
        System.out.println("Sort Asc(value) matList with integer numbers in range ");
        matList8.sortAsc(4);
        System.out.println(matList8);
        System.out.println();
        System.out.println("Execute to Array");
        System.out.println(matList8);
        System.out.println();
        System.out.println("Execute to Array in range");
        System.out.println(Arrays.toString(matList8.toArray(1, 3)));
        System.out.println();
        System.out.println("Using subList");
        System.out.println((matList8.subList(1, 3)));
        MatList<Integer> matList9 = new MatList<>();
        System.out.println();
        System.out.println("Using cut(1,3)");
        matList9 = matList8.cut(1, 3);
        System.out.println(matList9);
        System.out.println();
        System.out.println("Create matList with integer numbers based on matList collections");
        MatList<Integer> matList10 = new MatList<Integer>(matList3);
        System.out.println(matList10);
        System.out.println();
        System.out.println("Add group element in matList with integer numbers");
        MatList<Integer> matList11 = new MatList<>();
        matList11.add(20, 5, 5, 6, 7, 8, 9, 10);
        System.out.println(matList11);
        System.out.println();
        System.out.println("Add group element in another matList with integer numbers");
        MatList<Integer> matList12 = new MatList<>();
        matList12.add(8, 2, 30, 40, 5, 50);
        System.out.println(matList12);
        System.out.println();
        System.out.println("Using intersection operation");
        matList12.intersection(matList11, matList10);
        System.out.println(matList12);
        System.out.println();
        System.out.println("Clear the same range");
        System.out.println(matList11);
        matList11.clear(f);
        System.out.println(matList11);
        System.out.println();
        System.out.println("Find Min value in collection");
        System.out.println(matList10);
        System.out.println(matList10.getMin());
        System.out.println();
        System.out.println("Work with matList and find Min value, Max value, Average and Median in collection");
        System.out.println(matList11);
        System.out.println(matList11.getMin());
        System.out.println(matList11.getMax());
        System.out.println(matList11.getAverage());
        System.out.println(matList11.getMedian());
        System.out.println();
        System.out.println("Sort previous collection Desc(Value)");
        matList11.sortDesc(8);
        System.out.println(matList11);
    }*/



                MatList<Integer> mathList = new MatList<>();
                Random random = new Random();
                for (int i = 0; i < 100; i++) {
                    mathList.add((i) * random.nextInt(10));
                }
                System.out.println(mathList);
            }
        }